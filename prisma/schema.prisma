// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Account {
  id                 Int     @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(255)
  desc   String? @db.VarChar(255)
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  routes Route[]
}

model Route {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  path        String?   @db.VarChar(255)
  project     Project?  @relation(fields: [projectId], references: [id])
  projectId   Int
  componentId Int       @unique
  component   Component @relation(fields: [componentId], references: [id])
}

model Component {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(255)
  code   String? @db.VarChar(255)
  data   String? @db.Text
  routes Route[]
  userId Int
}
